---
subchart:
  bull-exporter:
    enabled: true
  grafana:
    enabled: true
  kafka-exporter:
    enabled: true
  kube-state-metrics:
    enabled: true
  pgadmin:
    enabled: true
  node-exporter:
    enabled: true
  postgres-exporter:
    enabled: true
  prometheus:
    enabled: true
  redis-exporter:
    enabled: true
  redis-insight:
    enabled: true

global:
  pullPolicy: IfNotPresent
  namespace: paragon
  env: {}

# PrometheusRule configuration for custom alert rules
prometheusRule:
  enabled: true
  # Default alert configuration
  defaultLabels:
    service: "paragon"
  defaultAnnotations:
    runbook_url: ""
  # Alert thresholds
  thresholds:
    criticalRestartWindow: "1h"
    frequentRestartWindow: "15m"
    crashLoopWindow: "5m"
    frequentRestartCount: 2
    crashLoopCount: 3
  # Alert durations
  durations:
    criticalRestart: "5m"
    frequentRestart: "2m"
    crashLoop: "1m"
  rules:
    # Critical alert for any restart in critical microservices
    - alert: CriticalPodRestart
      expr: |
        increase(kube_pod_container_status_restarts_total{
          namespace="{{ .Values.global.namespace }}"
        }[{{ .Values.prometheusRule.thresholds.criticalRestartWindow }}]) > 0
      for: "{{ .Values.prometheusRule.durations.criticalRestart }}"
      labels:
        severity: critical
        service: "{{ .Values.prometheusRule.defaultLabels.service }}"
      annotations:
        summary: "Critical service pod {{ $labels.container }} has restarted"
        description: |
          Critical service pod {{ $labels.container }} in namespace
          {{ $labels.namespace }} has restarted {{ $value }} times in the last
          {{ .Values.prometheusRule.thresholds.criticalRestartWindow }}.
          This requires immediate attention.

    # Warning for multiple restarts in short time
    - alert: PodFrequentRestarts
      expr: |
        increase(kube_pod_container_status_restarts_total{
          namespace="{{ .Values.global.namespace }}"
        }[{{ .Values.prometheusRule.thresholds.frequentRestartWindow }}]) >
        {{ .Values.prometheusRule.thresholds.frequentRestartCount }}
      for: "{{ .Values.prometheusRule.durations.frequentRestart }}"
      labels:
        severity: warning
        service: "{{ .Values.prometheusRule.defaultLabels.service }}"
      annotations:
        summary: "Pod {{ $labels.container }} is restarting frequently"
        description: |
          Pod {{ $labels.container }} in namespace {{ $labels.namespace }}
          has restarted {{ $value }} times in the last
          {{ .Values.prometheusRule.thresholds.frequentRestartWindow }}

    # Alert for crash loop detection
    - alert: PodCrashLoop
      expr: |
        increase(kube_pod_container_status_restarts_total{
          namespace="{{ .Values.global.namespace }}"
        }[{{ .Values.prometheusRule.thresholds.crashLoopWindow }}]) >
        {{ .Values.prometheusRule.thresholds.crashLoopCount }}
      for: "{{ .Values.prometheusRule.durations.crashLoop }}"
      labels:
        severity: critical
        service: "{{ .Values.prometheusRule.defaultLabels.service }}"
      annotations:
        summary: "Pod {{ $labels.container }} is in crash loop"
        description: |
          Pod {{ $labels.container }} in namespace {{ $labels.namespace }}
          has restarted {{ $value }} times in the last
          {{ .Values.prometheusRule.thresholds.crashLoopWindow }} -
          possible crash loop
