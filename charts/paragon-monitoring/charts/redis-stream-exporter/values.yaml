# Default values for redis-stream-exporter
# This is a YAML-formatted file.

# Image configuration
image:
  repository: useparagon/redis-streams-exporter
  tag: "latest"
  pullPolicy: IfNotPresent

# Image pull secrets
imagePullSecrets: []

# Name override
nameOverride: ""
# Full name override
fullnameOverride: ""

# Service account configuration
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Pod annotations
podAnnotations: {}

# Pod security context
podSecurityContext: {}

# Container security context
securityContext: {}

# Service configuration
service:
  type: ClusterIP
  port: 9121
  targetPort: 9121
  annotations: {}

# Ingress configuration
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

# Resources configuration
resources:
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

# Redis connection configuration - these will be used to connect to different Redis instances
redis:
  cache:
    secretName: paragon-secrets
    secretKey: CACHE_REDIS_URL
  queue:
    secretName: paragon-secrets
    secretKey: QUEUE_REDIS_URL
  system:
    secretName: paragon-secrets
    secretKey: SYSTEM_REDIS_URL
  workflow:
    secretName: paragon-secrets
    secretKey: WORKFLOW_REDIS_URL

# Prometheus monitoring configuration
prometheus:
  enabled: true
  port: 9121
  path: /metrics
  interval: 15s
  scrapeTimeout: 10s

# Autoscaling configuration
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Environment variables
env:
  - name: LOG_LEVEL
    value: "info"
  - name: REDIS_CONNECTION_TIMEOUT
    value: "30s"
  - name: REDIS_READ_TIMEOUT
    value: "10s"
  - name: METRICS_PATH
    value: "/metrics"
  - name: HEALTH_CHECK_PATH
    value: "/health"
  - name: READY_CHECK_PATH
    value: "/ready"

# Liveness probe configuration
livenessProbe:
  enabled: true
  path: /health
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

# Readiness probe configuration
readinessProbe:
  enabled: true
  path: /ready
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

# Startup probe configuration
startupProbe:
  enabled: true
  path: /health
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 30

# ServiceMonitor for Prometheus Operator
serviceMonitor:
  enabled: true
  interval: 15s
  scrapeTimeout: 10s
  path: /metrics
  port: http
  honorLabels: false
  additionalLabels: {}
  targetLabels: []
  metricRelabelings: []
  relabelings: []

# Pod disruption budget
podDisruptionBudget:
  enabled: false
  minAvailable: 1
  maxUnavailable: 1

# Network policy
networkPolicy:
  enabled: false
  ingressRules: []
  egressRules: []

# Secrets configuration (for backward compatibility)
secrets: {}
secretName: paragon-secrets

# Environment keys for configuration
envKeys:
  - LOG_LEVEL
  - REDIS_CONNECTION_TIMEOUT
  - REDIS_READ_TIMEOUT
  - METRICS_PATH
  - HEALTH_CHECK_PATH
  - READY_CHECK_PATH

# Secret keys for Redis connections
secretKeys:
  - CACHE_REDIS_URL
  - QUEUE_REDIS_URL
  - SYSTEM_REDIS_URL
  - WORKFLOW_REDIS_URL

# Replica count (used when autoscaling is disabled)
replicaCount: 1
