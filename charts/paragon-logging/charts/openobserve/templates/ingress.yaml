{{- if .Values.ingress.enabled -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "openobserve.fullname" . }}
  labels:
  {{- if eq .Values.global.env.HOST_ENV "AWS_K8" }}
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/certificate-arn: {{ .Values.ingress.acm_certificate_arn }}
    alb.ingress.kubernetes.io/group.name: {{ .Values.ingress.load_balancer_name | default "paragon" }}
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-path: {{ .Values.ingress.healthcheck_path | default "/healthz" }}
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '3'
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/load-balancer-name: {{ .Values.ingress.load_balancer_name | default "paragon" }}
    alb.ingress.kubernetes.io/scheme: {{ .Values.ingress.scheme | default "internet-facing" }}
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/target-group-attributes: deregistration_delay.timeout_seconds=30
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
  {{- else if eq .Values.global.env.HOST_ENV "AZURE_K8" }}
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    service.beta.kubernetes.io/azure-load-balancer-health-probe-request-path: {{ .Values.ingress.healthcheck_path | default "/healthz" }}
    service.beta.kubernetes.io/azure-load-balancer-type: "public"
  {{- else if eq .Values.global.env.HOST_ENV "GCP_K8" }}
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
  {{ end }}
spec:
  ingressClassName: {{ .Values.ingress.className }}
  {{- if eq .Values.global.env.HOST_ENV "AZURE_K8" }}
  tls:
    - hosts:
        - {{ .Values.ingress.host }}
      secretName: {{ .Values.tls_secret }}
  {{- else if eq .Values.global.env.HOST_ENV "GCP_K8" }}
  tls:
    - hosts:
        - {{ .Values.ingress.host }}
      secretName: {{ .Values.tls_secret }}
  {{- end }}
  rules:
    - host: {{ .Values.ingress.host }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ include "openobserve.fullname" . }}
                port:
                  number: {{ .Values.service.port }}
{{- end }}
