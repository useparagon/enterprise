# Default values for minio.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

image:
  repository: useparagon/minio
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: 'latest'

service:
  type: ClusterIP
  port: 9000

resources:
  limits:
    memory: 512Mi
  requests:
    cpu: 0.25
    memory: 512Mi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 4
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 70

secretName: "paragon-secrets"

envKeys:
  - MINIO_PORT
  - MINIO_MODE
  - MINIO_SYSTEM_BUCKET
  - MINIO_PUBLIC_BUCKET
  - MINIO_ROOT_USER
  - MINIO_ROOT_PASSWORD
  - MINIO_MICROSERVICE_USER
  - MINIO_MICROSERVICE_PASS
  - MINIO_REGION
  - MINIO_PUBLIC_URL
  - MINIO_PRIVATE_URL

imagePullSecrets:
  - name: docker-cfg
nameOverride: ''
fullnameOverride: 'minio'

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ''

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  certificate: ''
  enabled: true
  className: ''
  host: chart-example.local
  healthcheck_path: /minio/health/live
  include_annotations: true

nodeSelector: {}

tolerations: []

affinity:
  nodeAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 1
      preference:
        matchExpressions:
        - key: useparagon.com/capacityType
          operator: In
          values:
          - spot

tls_secret: ''
